#
# /etc/pacman.conf
#
# See the pacman.conf(5) manpage for option and repository directives

#
# GENERAL OPTIONS
#
[options]
# The following paths are commented out with their default values listed.
# If you wish to use different paths, uncomment and update the paths.
#RootDir     = /
#DBPath      = /var/lib/pacman/
#CacheDir    = /var/cache/pacman/pkg/
#LogFile     = /var/log/pacman.log
#GPGDir      = /etc/pacman.d/gnupg/
#HookDir     = /etc/pacman.d/hooks/
HoldPkg     = pacman glibc
#XferCommand = /usr/bin/curl -L -C - -f -o %o %u
#XferCommand = /usr/bin/wget --passive-ftp -c -O %o %u
#CleanMethod = KeepInstalled
Architecture = auto

# Pacman won't upgrade packages listed in IgnorePkg and members of IgnoreGroup
#IgnorePkg   =
#IgnoreGroup =

#NoUpgrade   =
#NoExtract   =

# Misc options
#UseSyslog
#Color
#TotalDownload
CheckSpace
#VerbosePkgLists

# By default, pacman accepts packages signed by keys that its local keyring
# trusts (see pacman-key and its man page), as well as unsigned packages.
SigLevel = Never
LocalFileSigLevel = Optional
#RemoteFileSigLevel = Required

# NOTE: You must run `pacman-key --init` before first using pacman; the local
# keyring can then be populated with the keys of all trusted packagers with:
#   `pacman-key --populate archlinux archlinux32 archlinuxarm parabola`.

#
# REPOSITORIES
#   - can be defined here or included from another file
#   - pacman will search repositories in the order defined here
#   - local/custom mirrors can be added here or in separate files
#   - repositories listed first will take precedence when packages
#     have identical names, regardless of version number
#   - URLs will have $repo replaced by the name of the current repo
#   - URLs will have $arch replaced by the name of the architecture
#
# Repository entries are of the format:
#       [repo-name]
#       Server = ServerName
#       Include = IncludePath
#
# The header [repo-name] is crucial - it must be present and
# un-commented to enable the repo.
#
# Some repositories are disabled by default. To enable them, un-comment the
# repo name header (e.g. '[nonprism]') and the following 'Include' line.
# You can add preferred servers for each repo between the header and "Include" line,
# according to the format in /etc/pacman.d/mirrorlist,
# and those will be preferred over the standard mirrors for that repo.
#
# The order in which these entries appear in this file is critical.
# Much of the Parabola magic that supports advanced features such as
# multiple init-systems and multiple layers of freedom and privacy,
# depends on the order in which these repos are defined.
# Moving or adding repos out of the expected order can make your system insane.

# Notes on special repositories:
#
# Non-prism is a repository for enhanced privacy, beyond the FSDG requirements.
# It contains specially patched versions of certain software from the standard repos,
# that are known to include privacy-sensative features that some people may want to use,
# but that others may consider to be undesirable anti-features.
# For more info see: https://wiki.parabola.nu/Nonprism
#
# The non-systemd repository contains packages that are important and relevant only to
# Parabola systems using an init-system other than systemd.
# Parabola systems using systemd SHOULD NOT have this enabled;.
# while Parabola systems using any other init-system SHOULD have this enabled.
#
# The kernels repository contains additional special kernels for particular use-cases,
# such as maximal security hardening and real-time systems.
#
# The PCR (Parabola Community Repository) contains additional packages,
# most often requested by Parabola users, that are not considered to be
# part of the standard Parabola/Arch system, but are nonetheless useful or fun.
#
# Multi-lib repositories allow 32-bit applications to run on x86_64 systems.
#
# The Parabola system also supports custom, user-defined, repositories;
# but be aware that the Parabola team can not recommend nor support their use.
# The Parabola team can only support the use of software that is published by Parabola.
# The use of third-party software is discouraged with a "use at your own risk" warning.
# These may be community-maintained or maintained privately by the local user or sysadmin.
# They may be hosted on the internet, on the local network, or only on the local computer.
# An example of a custom package repository is given below
# in the "User-defined repos" section
# See the pacman manpage for details on creating your own repositories.


###########################
# Parabola standard repos #
###########################

#[nonprism-testing]
#Include = /etc/pacman.d/mirrorlist

[nonprism]
Include = /etc/pacman.d/mirrorlist

#[nonsystemd-testing]
#Include = /etc/pacman.d/mirrorlist

[nonsystemd]
Include = /etc/pacman.d/mirrorlist

#[libre-testing]
#Include = /etc/pacman.d/mirrorlist

[libre]
Include = /etc/pacman.d/mirrorlist

#[kernels-testing]
#Include = /etc/pacman.d/mirrorlist

#[kernels]
#Include = /etc/pacman.d/mirrorlist


#######################
# Arch standard repos #
#######################

#[testing]
#Include = /etc/pacman.d/mirrorlist

[core]
Include = /etc/pacman.d/mirrorlist

[extra]
Include = /etc/pacman.d/mirrorlist

#[community-testing]
#Include = /etc/pacman.d/mirrorlist

[community]
Include = /etc/pacman.d/mirrorlist


######################
# Supplemental repos #
######################

#[pcr-testing]
#Include = /etc/pacman.d/mirrorlist

[pcr]
Include = /etc/pacman.d/mirrorlist


######################
# User-defined repos #
######################

#[custom]
#SigLevel = Optional TrustAll
#Server = file:///home/custompkgs


##############
# Over-rides #
##############

#Include = /etc/pacman.d/*.conf
